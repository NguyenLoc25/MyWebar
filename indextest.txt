<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Hydro Motor AR</title>
  <!-- A-Frame -->
  <script src="https://aframe.io/releases/1.4.0/aframe.min.js"></script>
  <!-- AR.js -->
  <script src="https://raw.githack.com/AR-js-org/AR.js/master/aframe/build/aframe-ar.min.js"></script>
  <!-- Event-set for hover effects -->
  <script src="https://unpkg.com/aframe-event-set-component@3.0.3/dist/aframe-event-set-component.min.js"></script>
</head>
<body style="margin: 0; overflow: hidden;">
  <a-scene embedded arjs cursor="rayOrigin: mouse">
    <!-- Lighting -->
    <a-entity light="type: ambient; color: #888; intensity: 0.5"></a-entity>
    <a-entity light="type: directional; color: #fff; intensity: 0.8" position="2 4 2"></a-entity>
    <a-entity light="type: hemisphere; color: #4455aa; groundColor: #882222; intensity: 0.5"></a-entity>

    <!-- Marker -->
    <a-marker type="pattern" url="pattern-motor.patt">
      <!-- Floor -->
      <a-plane position="0 0 0" rotation="-90 0 0" width="5" height="10" color="#4b4b4b" opacity="0"></a-plane>

      <!-- Water simulation -->
      <a-plane position="0 0.01 0" rotation="-90 0 0" width="3" height="3" color="#1a6fc9" 
               opacity="0.7" animation="property: rotation; to: -90 0 360; loop: true; dur: 10000; easing: linear"></a-plane>

      <!-- Turbine -->
      <a-entity id="turbine" position="0 1 0" rotation="0 0 0">
        <a-cylinder radius="0.35" height="2" color="#555555" metalness="0.8" roughness="0.2"></a-cylinder>
        <a-entity position="0 0 0.6">
          <a-entity geometry="primitive: box; width: 0.2; height: 0.5; depth: 1.2" 
                    material="color: #1f77b4; metalness: 0.5; roughness: 0.3"
                    position="0.15 0 0" rotation="0 0 15"></a-entity>
        </a-entity>
        <a-entity position="0 0 -0.6">
          <a-entity geometry="primitive: box; width: 0.2; height: 0.5; depth: 1.2" 
                    material="color: #1f77b4; metalness: 0.5; roughness: 0.3"
                    position="-0.15 0 0" rotation="0 0 -15"></a-entity>
        </a-entity>
        <a-entity position="0 0 0" rotation="0 90 0">
          <a-entity geometry="primitive: box; width: 0.2; height: 0.5; depth: 2.2" 
                    material="color: #1f77b4; metalness: 0.5; roughness: 0.3"
                    position="0 0 0"></a-entity>
        </a-entity>
      </a-entity>

      <!-- Motor housing -->
      <a-cylinder position="0 1 0" radius="1.2" height="2.2" color="#ffffff" 
                  opacity="0.3" metalness="0.9" roughness="0.1"></a-cylinder>

      <!-- Control Panel -->
      <a-entity position="1.5 1 -1.5" rotation="0 -30 0">
        <a-box width="1.5" height="1" depth="0.1" color="#333333"></a-box>
        <a-text value="HYDRO MOTOR CONTROL" position="0 0.3 0.06" align="center" color="white" width="3"></a-text>
        <a-text id="rpmText" value="RPM: 30" position="0 0 0.06" align="center" color="white" width="3"></a-text>
        <a-text id="powerText" value="POWER: ON" position="0 -0.3 0.06" align="center" color="#00ff00" width="3"></a-text>
        <a-entity id="toggleButton" class="clickable" geometry="primitive: box; width: 0.5; height: 0.2; depth: 0.05" 
                  material="color: #ff4444" position="0 -0.5 0.06"
                  event-set__mouseenter="scale: 1.1 1.1 1.1"
                  event-set__mouseleave="scale: 1 1 1">
        </a-entity>
        <a-text id="buttonText" value="STOP" position="0 -0.5 0.07" align="center" color="white" width="1"></a-text>
      </a-entity>

      <!-- Water Particles -->
      <a-entity id="waterParticles" position="0 1.5 0">
        <a-entity id="particleContainer"></a-entity>
      </a-entity>
    </a-marker>

    <!-- Camera -->
    <a-entity camera></a-entity>

    <!-- JavaScript -->
    <script>
      let isRunning = true;
      const toggleButton = document.querySelector('#toggleButton');
      const turbine = document.querySelector('#turbine');
      const rpmText = document.querySelector('#rpmText');
      const powerText = document.querySelector('#powerText');
      const buttonText = document.querySelector('#buttonText');
      const particleContainer = document.querySelector('#particleContainer');

      function startAnimation() {
        turbine.setAttribute('animation__spin', {
          property: 'rotation',
          to: '0 360 0',
          loop: true,
          dur: 2000,
          easing: 'linear'
        });
      }

      function stopAnimation() {
        turbine.removeAttribute('animation__spin');
        turbine.setAttribute('rotation', '0 0 0');
      }

      function createParticles() {
        for (let i = 0; i < 30; i++) {
          const particle = document.createElement('a-entity');
          particle.setAttribute('geometry', {
            primitive: 'sphere',
            radius: 0.03 + Math.random() * 0.02
          });
          particle.setAttribute('material', {
            color: '#1a6fc9',
            opacity: 0.6 + Math.random() * 0.3
          });
          particle.setAttribute('position', {
            x: (Math.random() - 0.5),
            y: (Math.random() - 0.5) * 0.5,
            z: (Math.random() - 0.5)
          });
          particle.setAttribute('animation', {
            property: 'position',
            to: {
              x: (Math.random() - 0.5),
              y: -0.5,
              z: (Math.random() - 0.5)
            },
            dur: 2000 + Math.random() * 3000,
            easing: 'linear',
            loop: true
          });
          particleContainer.appendChild(particle);
        }
      }

      toggleButton.addEventListener('click', () => {
        isRunning = !isRunning;

        if (isRunning) {
          startAnimation();
          rpmText.setAttribute('value', 'RPM: 30');
          powerText.setAttribute('value', 'POWER: ON');
          powerText.setAttribute('color', '#00ff00');
          buttonText.setAttribute('value', 'STOP');
          toggleButton.setAttribute('material', 'color', '#ff4444');

          const particles = particleContainer.querySelectorAll('[animation]');
          particles.forEach(particle => {
            const anim = particle.components.animation;
            if (anim) {
              anim.pause();
              anim.play();
            }
          });
        } else {
          stopAnimation();
          rpmText.setAttribute('value', 'RPM: 0');
          powerText.setAttribute('value', 'POWER: OFF');
          powerText.setAttribute('color', '#ff0000');
          buttonText.setAttribute('value', 'START');
          toggleButton.setAttribute('material', 'color', '#44ff44');

          const particles = particleContainer.querySelectorAll('[animation]');
          particles.forEach(particle => {
            const anim = particle.components.animation;
            if (anim) anim.pause();
          });
        }
      });

      startAnimation();
      createParticles();
    </script>
  </a-scene>
</body>
</html>
